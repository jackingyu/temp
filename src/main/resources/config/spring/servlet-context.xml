<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 
	<annotation-driven conversion-service="conversionService" enable-matrix-variables="true">
		<argument-resolvers>
			<beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/>
		</argument-resolvers>
		<async-support default-timeout="3000">
			<callable-interceptors>
				<beans:bean class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" />
			</callable-interceptors>
		</async-support>
	</annotation-driven>
    -->
    
	<!-- Handles HTTP GET requests for /ui5/** by efficiently serving up static resources in the ${webappRoot}/ui5/ directory -->
	<resources mapping="/ui5/**" location="/ui5/" />
	

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/jsp/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package -->
	<!-- 
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="formatters">
            <beans:bean class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" />
		</beans:property>
	</beans:bean>
    -->
	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	<!-- Imports user-defined @Controller beans that process client requests -->

    <context:annotation-config />
	<context:component-scan base-package="com.fmg.conmon.web.ui5.controller"></context:component-scan>
  
    <annotation-driven ignore-default-model-on-redirect="true">
		<message-converters>
			<beans:bean class="org.springframework.http.converter.ResourceHttpMessageConverter"/>
			<beans:bean class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter"/>
			 <beans:bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <beans:property name="objectMapper">  
                    <beans:bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <beans:property name="dateFormat">  
                            <beans:bean class="java.text.SimpleDateFormat">  
                                <beans:constructor-arg type="java.lang.String" value="yyyy-MM-dd HH:mm:ss" />  
                            </beans:bean>  
                        </beans:property>  
                    </beans:bean>  
                </beans:property>  
            </beans:bean>  
		</message-converters>
	</annotation-driven>
</beans:beans>